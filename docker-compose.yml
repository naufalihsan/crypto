version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - pipeline-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      - zookeeper
    networks:
      - pipeline-network
    volumes:
      - kafka-data:/var/lib/kafka/data
  # Remove docker.sock unless you specifically need it

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
    depends_on:
      - kafka
    networks:
      - pipeline-network

  jobmanager:
    build:
      context: .
      dockerfile: Dockerfile.pyflink
    image: pyflink-cluster:latest
    container_name: jobmanager
    ports:
      - "8081:8081"
    command: ["jobmanager"]
    environment:
      JOB_MANAGER_RPC_ADDRESS: jobmanager
    networks:
      - pipeline-network
    volumes:
      - flink-data:/flink/data

  taskmanager:
    image: pyflink-cluster:latest
    depends_on:
      - jobmanager
    command: ["taskmanager"]
    environment:
      JOB_MANAGER_RPC_ADDRESS: jobmanager
      TASK_MANAGER_NUMBER_OF_TASK_SLOTS: 4
    networks:
      - pipeline-network
    deploy:
      replicas: 2
    volumes:
      - flink-data:/flink/data

networks:
  pipeline-network:
    driver: bridge

volumes:
  flink-data:
  kafka-data: